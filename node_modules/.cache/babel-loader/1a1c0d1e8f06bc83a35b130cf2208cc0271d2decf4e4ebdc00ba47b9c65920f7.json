{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tema\\\\Desktop\\\\fakenews\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  // Проверяем, есть ли пользователь в localStorage при загрузке\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n\n  // Регистрация пользователя\n  const register = (username, email, password) => {\n    // Проверяем, существует ли пользователь с таким email\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const existingUser = users.find(user => user.email === email);\n    if (existingUser) {\n      throw new Error('Пользователь с таким email уже существует');\n    }\n\n    // Создаем нового пользователя\n    const newUser = {\n      id: Date.now().toString(),\n      username,\n      email,\n      password,\n      // В реальном приложении пароль должен быть захеширован\n      preferences: {\n        themes: ['politics', 'technology', 'sports', 'entertainment'],\n        favoriteNews: []\n      },\n      createdAt: new Date().toISOString()\n    };\n\n    // Добавляем пользователя в список пользователей\n    users.push(newUser);\n    localStorage.setItem('users', JSON.stringify(users));\n\n    // Устанавливаем текущего пользователя\n    setCurrentUser(newUser);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(newUser));\n    return newUser;\n  };\n\n  // Вход пользователя\n  const login = (email, password) => {\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const user = users.find(user => user.email === email && user.password === password);\n    if (!user) {\n      throw new Error('Неверный email или пароль');\n    }\n    setCurrentUser(user);\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(user));\n    return user;\n  };\n\n  // Выход пользователя\n  const logout = () => {\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user');\n  };\n\n  // Обновление данных пользователя\n  const updateUser = userData => {\n    const updatedUser = {\n      ...currentUser,\n      ...userData\n    };\n\n    // Обновляем пользователя в списке пользователей\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    const updatedUsers = users.map(user => user.id === currentUser.id ? updatedUser : user);\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    setCurrentUser(updatedUser);\n    return updatedUser;\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    loading,\n    register,\n    login,\n    logout,\n    updateUser\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"fSs8I3rmRpj0Th9Mm1M79E+wcpY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","loading","setLoading","user","localStorage","getItem","JSON","parse","register","username","email","password","users","existingUser","find","Error","newUser","id","Date","now","toString","preferences","themes","favoriteNews","createdAt","toISOString","push","setItem","stringify","login","logout","removeItem","updateUser","userData","updatedUser","updatedUsers","map","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Tema/Desktop/fakenews/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Проверяем, есть ли пользователь в localStorage при загрузке\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      setCurrentUser(JSON.parse(user));\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Регистрация пользователя\r\n  const register = (username, email, password) => {\r\n    // Проверяем, существует ли пользователь с таким email\r\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const existingUser = users.find(user => user.email === email);\r\n    \r\n    if (existingUser) {\r\n      throw new Error('Пользователь с таким email уже существует');\r\n    }\r\n\r\n    // Создаем нового пользователя\r\n    const newUser = {\r\n      id: Date.now().toString(),\r\n      username,\r\n      email,\r\n      password, // В реальном приложении пароль должен быть захеширован\r\n      preferences: {\r\n        themes: ['politics', 'technology', 'sports', 'entertainment'],\r\n        favoriteNews: []\r\n      },\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    // Добавляем пользователя в список пользователей\r\n    users.push(newUser);\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n\r\n    // Устанавливаем текущего пользователя\r\n    setCurrentUser(newUser);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(newUser));\r\n\r\n    return newUser;\r\n  };\r\n\r\n  // Вход пользователя\r\n  const login = (email, password) => {\r\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const user = users.find(user => user.email === email && user.password === password);\r\n    \r\n    if (!user) {\r\n      throw new Error('Неверный email или пароль');\r\n    }\r\n\r\n    setCurrentUser(user);\r\n    setIsAuthenticated(true);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n\r\n    return user;\r\n  };\r\n\r\n  // Выход пользователя\r\n  const logout = () => {\r\n    setCurrentUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Обновление данных пользователя\r\n  const updateUser = (userData) => {\r\n    const updatedUser = { ...currentUser, ...userData };\r\n    \r\n    // Обновляем пользователя в списке пользователей\r\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n    const updatedUsers = users.map(user => \r\n      user.id === currentUser.id ? updatedUser : user\r\n    );\r\n    \r\n    localStorage.setItem('users', JSON.stringify(updatedUsers));\r\n    localStorage.setItem('user', JSON.stringify(updatedUser));\r\n    \r\n    setCurrentUser(updatedUser);\r\n    \r\n    return updatedUser;\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    isAuthenticated,\r\n    loading,\r\n    register,\r\n    login,\r\n    logout,\r\n    updateUser\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}