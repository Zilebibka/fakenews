{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0440\\u0442\\u0451\\u043C\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\fakenews\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\n\n// Создаем контекст\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Получаем сохраненную тему из localStorage или используем светлую тему по умолчанию\n  const savedTheme = localStorage.getItem('theme') || 'light';\n  const [theme, setTheme] = useState(savedTheme);\n\n  // Применяем тему к document.body при изменении темы\n  useEffect(() => {\n    // Сохраняем выбранную тему в localStorage\n    localStorage.setItem('theme', theme);\n\n    // Применяем класс темы к body\n    document.body.className = theme === 'dark' ? 'dark-theme' : 'light-theme';\n\n    // Обновляем мета-тег theme-color для мобильных браузеров\n    const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n    if (metaThemeColor) {\n      metaThemeColor.setAttribute('content', theme === 'dark' ? '#121212' : '#ffffff');\n    }\n  }, [theme]);\n\n  // Функция для переключения темы\n  const toggleTheme = () => {\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeProvider, \"rQT8YYzdp7wkN0ywQdQ/vzzT4bk=\");\n_c = ThemeProvider;\nexport default ThemeContext;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","savedTheme","localStorage","getItem","theme","setTheme","setItem","document","body","className","metaThemeColor","querySelector","setAttribute","toggleTheme","prevTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Артём/OneDrive/Рабочий стол/fakenews/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\n// Создаем контекст\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  // Получаем сохраненную тему из localStorage или используем светлую тему по умолчанию\r\n  const savedTheme = localStorage.getItem('theme') || 'light';\r\n  const [theme, setTheme] = useState(savedTheme);\r\n\r\n  // Применяем тему к document.body при изменении темы\r\n  useEffect(() => {\r\n    // Сохраняем выбранную тему в localStorage\r\n    localStorage.setItem('theme', theme);\r\n    \r\n    // Применяем класс темы к body\r\n    document.body.className = theme === 'dark' ? 'dark-theme' : 'light-theme';\r\n    \r\n    // Обновляем мета-тег theme-color для мобильных браузеров\r\n    const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\r\n    if (metaThemeColor) {\r\n      metaThemeColor.setAttribute('content', theme === 'dark' ? '#121212' : '#ffffff');\r\n    }\r\n  }, [theme]);\r\n\r\n  // Функция для переключения темы\r\n  const toggleTheme = () => {\r\n    setTheme(prevTheme => prevTheme === 'light' ? 'dark' : 'light');\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ThemeContext; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAEjE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C;EACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO;EAC3D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,UAAU,CAAC;;EAE9C;EACAP,SAAS,CAAC,MAAM;IACd;IACAQ,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;;IAEpC;IACAG,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGL,KAAK,KAAK,MAAM,GAAG,YAAY,GAAG,aAAa;;IAEzE;IACA,MAAMM,cAAc,GAAGH,QAAQ,CAACI,aAAa,CAAC,0BAA0B,CAAC;IACzE,IAAID,cAAc,EAAE;MAClBA,cAAc,CAACE,YAAY,CAAC,SAAS,EAAER,KAAK,KAAK,MAAM,GAAG,SAAS,GAAG,SAAS,CAAC;IAClF;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACxBR,QAAQ,CAACS,SAAS,IAAIA,SAAS,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EACjE,CAAC;EAED,oBACElB,OAAA,CAACC,YAAY,CAACkB,QAAQ;IAACC,KAAK,EAAE;MAAEZ,KAAK;MAAES;IAAY,CAAE;IAAAd,QAAA,EAClDA;EAAQ;IAAAkB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACpB,EAAA,CA9BWF,aAAa;AAAAuB,EAAA,GAAbvB,aAAa;AAgC1B,eAAeD,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}